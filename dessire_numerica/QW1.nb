(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    116683,       2275]
NotebookOptionsPosition[    113413,       2225]
NotebookOutlinePosition[    113842,       2242]
CellTagsIndexPosition[    113799,       2239]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Tarea:",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " Programar mi primer caminata cu\[AAcute]ntica, implementando \
gr\[AAcute]ficas de probabilidad y desviaci\[OAcute]n est\[AAcute]ndar en \
funci\[OAcute]n del tiempo y en espec\[IAcute]fico, intentar replicar las gr\
\[AAcute]ficas 3.5 y 3.6 del libro.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
E4Fac6saCmr2DtebN2+UWBGoDVj6A2rvXd7GxsbCJs6CCNSCCNSaW9VQUOfl
5RnVNTp27JgSKwK1AUtPQJ2TkwNKi5ZYZyJQCyJQa25VQ0EtkW2H0dakbUWv
zxCoDVt6AmqnRU6dOneS705LCNScCNSaW9VcUOOKtGjZQrRCI29FoDZg6QOo
79+/X6t2rTNnzii0IlALIlBrblVzQQ0dOnyoXv16WVlZCq0I1AYsfQD1cJvh
NrY2FVkRqAURqDW3qtGgxin37NVT4ca4BGrDVrWDOiIiAt1pdKorsiJQCyJQ
a25Vo0ENxcVJFwBMSEiQtyJQG7C8vb0joyLj1NTvf/x+6dIl1dPHxsZeuXIF
rh4j09mzZwMCAxYtWtSnbx943dy5c/MrVnJyck5OjpIECnX79u3c3Fx1rXbu
3Jmdna2u1a1bt968eaMDK6SHlboZqW6FlFllevjwYR2jOurmlZeXh5pX1wrX
F1dZd1YpaltlZmb6+fmpawVfSklJUdcKlFZuNW7cOLQaSytL56XOwcHBkZGR
aFNR0VF/hP6BVoa2pnrDvHDhQmhoqLrN/+TJkwcOHKhudP1ckl9UTWd/6Egj
d6O6Rr/W+1XJH1u3U3kahVa//qqeiUZ5qWmin1byq+HppoQsX7ISrNA0lKdB
q0HbQbLqarxoW9WNrp9LXbp0SUxMfKWmTNubouOkaurX3/7atG3z4MGDd+/e
FRYWqj4v0ap1K9EOR6qIbZKlrlUj40YFhQWVpyuvevXrlZSUqGtV6Z4d8mJ7
86mbEQbFaNfqWhUVFSl/FU6hPnz4INqVUhWhJ9+8RXN1rTAAh0epa/Xy5ctK
t7WSF3rU8gvwVqr0jHQzMzN1rR4/ftyjZw8VE8OF4LFoU1evXoWV0NZUFHrU
ffr0Ubf5R0dHDxo0SN3zImmirt26inaGVUVLnJfk5uaqa+W0yCm/4hXdK9K8
+fPQ/NW1mjt3rroLtkuqCuoZM2fI78ZSqaZMnaJke8SKZG9vr64J2vK06dPU
taoaqIuLiyvdL1teqHNHR/GqiZUKdGJ7xKsl3BSEVW1VV9VADWC6uCjea0aJ
cCtxW+GmrtWLFy9WrV6lrtXz58/Xrl1bebrySkpKGmw9WF0rkiaqGqgNVVUD
tUGqaqA2VFUN1IYqArXuRaDmRaAWRKDmRaDmRaDWvTBmr8KjZYaqKjybZ8Ci
2uBFtSEIxKjCXB+JRCKRSCQSiUQi6VIYxIWEhDgtchJiDh0+hBhvb282okm5
m8I2M5VfHdqwhVO2Gmj122+/oYowvvPZ6/P777/v9d37s80Off36defOnX/8
8ceBAwd+tnPn9d///nfgoIFwidOnT0tki9KgWuAVT58+re6i6U5X46/yKzxc
uXJl3759qAf2SmNubu5mz80BgQHnz5+vvjIapkpLS588eTJy5Ej28c6dOwza
x44d279/PxqppaUliP3hw4dhw4dVa0l1qjdv3sDfXr16lZeXh48xMTEeHh4I
7Nq960T4ieounU51POw4zhoBjw0eFy5cqO7iVJtwnwKr4RLsxo128enTp6Ki
op/qpzQAwcTEhIULCgtw7qiKZ8+esWc+HR0dU1NTEQDM3717V50FNURlZmYK
oHZb4Xbw4EEEHj16BDLfunVryNAh7CuLHhav1F+soIZq0+ZNpu1Nvby82Gqr
s+fMPnXqFAJxV+OmTJ1S3aXTqcaNH3f58mUEzp49u9BpYXUXp3qUnZ3dpGmT
iXYTGYju3bsHULOv+vXv9+LFi2otnU4lPPESERExY+YMiez3xLYmbQsKCoyN
jdkwfInzEloA5IcLbiaAeuq0qeHh4RLZ0+8gFa7FpEmT2FcDLAckJSVVWyl1
K/heekY6+gnslY3hNsOBaARw50I9VHfpdKrefXrfvXcXgYsXL/7222/VXZxq
U2Fh4R9//AEiZWRknIs5J+wDbj3EOv5afPWWTZfq3KUzC2DEvXz5chZu07ZN
ckpys+bN2MeVq1bu3rO7espnEBK9pM8ieVA7ODhgqItAWlpat+7dMOSfMHEC
+woNlnUnDEwK64Tpy5cvvXr3wnBv9JjRV65cQcz169eFIcZPIquBVsnJyQhE
n4seP2F8dRenmhUYFLhv377Y2NiRo741GXStb9++Xb2l0qUEUAcEBjg7O7Mw
EI37V+MmjdlHFxcXWqnph4sHNe6SbA8sjHbnzZ/33//+lw3x0MPs2Kmjwl1X
DFvoM+DcN2zcEBwcLJFN2FbhNdsaLdQA28fB399/x44d1V2calZiYiKGnNnZ
2X369pHI2gXAVVxcXN3l0p0EUGOcxXpxBYUF6NSVlpaamZmxFR7s7OxS7qZU
ZykNUU+fPsXwjYUxvps6bSqAjMHLo0ePJLJZawTQhWC/KP0kWrNmDfwQfUiM
9yWyn7PnzJnz77//Oi1yqsJ6zjVaON8FCxfg3OfOnct+Wv0JBU/AnfrJkydo
BWwaFvdreAhGWFu3bq3u0ulOoHHrNq2FN1wwAH/16lUodDwUH0+ePIluNu5i
iP+ZHxDShjCuvxp/9VzMuefPn7OY/Pz8E+EnhI+4NPBSpPmpah43Jgxy+X2O
4JBhJ8KqsM68AQhjLrhEFdYtNBjh3I8EHMFdW1g7C80hJiYmLi7up2oXqamp
YAWbCpPI3mWOiIi4deuWkODmzZuRkZH05iaJRCKRSCQSiUQikUgkEolEIpFI
JBKJRCKRSCQSiUQikVTX33//fS7m3JGAIxLZ6h9eXl60TByJRCLplZJTks3N
zR0cHJ49e7Z06dLhNsMtelhUd6FIJBKJ9F2lpaUtWrYICAzw9fX93//+N3/B
fPspam8ETyKRSCTtCT3qWrVr7dixg+0uamJiEhQUVN2FIpFIJNJ3eXl5GdU1
YmtIPnjw4Jdav/ycSwqQSCSS3srKysrR0ZGFvb29e/fpXb3lIZFIJBKvnJwc
dKGFpaeH2wxft25dbGzs169fq7dgJBKJRGIKDQ1t07aNsHqecWPjkaNG3rlz
p3pLRSKRSCRB7969y87OFj7evHnz1eufZQtREolEIpFIJBKJRCKRSCQSiUQi
kUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgk
EolEIpFIJBKJRCL9UJW+f3B62/K5c+bMWbR+98H9uzYsc3RYHnTvcegSu9l+
ySWqHaTkr3PbnexGjrBz2ncjv7Tc4fMubHWcPWc2/uauOV6BeeHzy0G7vLy2
ee/x8T0YeunpW6X7V5Tm3And7uZ98Z2y71eU//791R1L9yd/Kn4RH+S5fOfF
99+jVDtB4Wzuhu9a6RnxT6k65u/jZUlRruPb3XZVWO7yNlUonSJ9fX3jz98P
ujuti8hU17QkK+7wH4kF3z6Vvrv3Z9Dv4ceOnnn44VvE3fIROtT3s6o8bfGL
a8d8vLy27w9Pfv219N3TmAC4mvfhqMdvFaeXXmPvlVuk1/iHSRvH1JmKX1yV
NZq3bx+e8V3rHvLoyw/OoKq+roFvK1bpu4end63aFvlKTy/T51trzerU+nXS
H4USaWGvr5/oGnPDy7pTv5UXVWmCpXkJgQdOxSecdB3Q6BejQd5pPGbf/7lk
QN++/fDXf8SmqxUe49Olxe2azTpd/OXdo+NOPU3H+acpY3XJxUWdRh/OrrA6
Sy46dR59iP/+c/rF8IRXOGbxufntRx/OKeWiJF9fpmUUqnCisgPdWGU+eCdK
9928vL6+TBcf7HPGt6QoV6cxhyouN2de0eHVVOG5RZN3pX1+lXAm4aV8wZTo
c/aDqHXWTcceyWXFehFoP3bbo8+STymbRs3845/Sry+C7MfIIpI3j5rxhzIC
qVO9qqkwetFkb3ZWqiT/kuzRo+GIg69ZGYuj5rVuPieiqOL0n2+sNLfeqdQD
1ZY2jinRRt0qUnHMfNMxaDRf03YMMnNL+PyDClaWpoq+zvm25pspfGt3n2+s
MB+++7mebnT2JWVjT6Nav04+Xix5F3P2avGrhPOx95Ju3ryVlivz7ZJ/Ui6d
OXvpTtrf/7zKLVTAJraD26drrl1+becYkcc12uKLnq6H4lP//lDJPepzgmu3
lnMjpR34Lw88+za08fu7tLTo3fuS4px/cmXd+k/5mWkv8tlt99NVl+6jD7/6
8E/6i7dlXlNalJ3xKO110bfvzUYfev3hn4zv3395/1ZaiE9xy8zGyED9Lar0
7fWNNuO9H+QWFBfm52Rn5+QXfpF8QTDnvXg4UZL71/N/rq/r863BfTuiNL+8
v9L+yi38/EV6sOETpAf7LOGLX5Z5vEv3MYeEcn8uzMvJeVdcWlr8Lic7511J
KW/OHb78yeNUC/PflpQWvv4nT0GT4erha3Fu/Jq+1l7Jr/M/5HJHxqH/Tkt/
XVT6zYCvZv50YxaYjmOg/vLQy7L3+jtS28/XV1hYez9O3cJFmA/xFiGoXI2w
6v0s+ZZzhpBz4dt3yPl5+qtCUT3Kn9b3GsBZXVvTd8gWnFWhKCHvA5y+PN46
wHjc0W8jmU+xzu1NnM6XlFmkl7Mou8ZD2DUu/31pUV5eUemn3MzMXJTka+E/
aRk5JYqyLl+nomOW0+e3mU9wkE+FhZ8+F4jcQb6A5a+8ULdv8uUtRWUt+Cdd
KGuZvha/RfLcDyVSs+ycvA+fJdIyyKq1XL6fri7rPhaNpvTvfSMAallJYYAc
VbjoFdRMMZ9G8HUFrl1a8DL9xTuxS3C+jeKKfFjUXCq+amUphHZXeGd9H4D6
0/u/M74zq5zTVqe+gXq0762IlUPmhBXDfV6F2Det/avd7wWSD1fd+zUZsCkx
1XdEo3pdJu6Oz1NU4NLX1/YvHNCkrumE/ckF36M/J6zoUqfWL7/UadRxnNc1
hZZlCctA/Sn94Jg2vdddurN/cnvzGZvX2g9zCkuP9XLeFH4jIXTF+HFbrr4r
BYi7mk92dV003bJ993mnXgLuvlMcD9xJCXEcsSKuSArqbuaT3VydZliamuH7
oqxL7oNa2B378B3UJYga3BxRBU8D7Nv3df499tE/T0OmdzCZfeL1Z0lJus+8
ZedyuPK+T9zjsiks4VrYqiEtB+5MKyozxxGTdrj43Hx8dZfrrtv5TwPtTfs5
/3458ZrfZFOLGZvW2g9dsP9P90Hfksa7dLWY7OrmNN3StPv8U8/+CrZvZ+P7
4vPbhz6jW40NzCv4Zh6bknqxrMClud9O/rjb+PGeV98VpAVP69DZzmP3jrWT
evZbn1huxFi+HoqeX9s3rZPFgiOR11LuHGFHfpT36vz+7YEnT+6wt7QPSMtL
3V9WzkXh+eWvCQfqglD7JiMPybqkpVm+Ni1m/HHUvulI/7KI4S1n/Fn83VBa
I3tvPo73dt2NGimr3vwvr5FzkDTnAfYBT/PvH5jUrvN4l/WrF40y6zwpMJ23
KncDEtXAfzOu7Zvaqcf8I1Hxafz9X+QDfK0A1I1G+b/8IFNe1CJTBmpY2MPi
bpmF9BpvDEuID1tt3XIQoPrte+kRV8YVFT8/Ob+7ydiNhw96LxvefYSb7759
3i4jek47/qq0XNYFb1O/u254puiY/Hm9u+7jsin0evJlb/vuNtseF2YF25vY
ytxh7+iW4wLzJOULUJQWPL1DJzuPXbjyvaRXXnDdlNSj5R0JZZ3Xvd2YjUdQ
1mHdR7hKy+o6ouf00HKD+s+ZgXatzd2uvstL9LBsPmpfRlFpwY0Njp533pfL
Vw7UJXmxmxeuDr6Wzk9RKr7oOakV1UxIklD4C9+aktwJSkru71+29o/YiNVD
TS0dtkWmf8f1d9++evuG33cfzsstz4rCiq/a97IL7e7R61vre1lM3bTda+1k
c3OX2CKAjXPa9GruaTNQGw10898wvtvU49ImB6R0rCMFNYZsXY2Mp50s/hS/
vEPd1vNjKpi1/vwqKWTNb6ZGv/xque2xUJ+fMhPCg3w3OI01M65du8PyuAqL
AFB3Ne7vuMVrg8sit90XXnyWfLm/2bLfhrs41JdUT6tR+2WD68JzCzpabnlQ
hB71CPS5JZL8UzNNLD0ln5+cOhQNP01Y3c/K69EXaY+67PtZJgO2PJCUnFvQ
YRIPanDo3ML20ihpF3HkAdnhvzzZaW225FJhaW74Vr+H3E38y6PtwybIuPT5
1tpesh51mbkk//cpPaYcSn5b8s/fr79Ku5eyg6H4A/pvSJEdA8RjSaU96u/l
HuCZEr/CwtY3q1Ty6YJTJ2nLFMyFAn9J3Ww1uuzkF3aw9Hrw9fnu4b3X3kLv
J2lNT5s9f/HOI6oHyefb7r2HeEv9q+zInxNWj7D3Cjx6NMB9osUEv7RPXDlF
4kCde2SM8dggGchLXx0cYTxx/77RjccGsojXB0c0nniMmyTL/92+x1T/7zXC
qvdzwirkHHT0aKD7hB4T/NI/pWzsh2uJnItRLb3cy1nx3ilXA9KzGuotbjXi
c+eOAFDXN5/h5e29C387Fls3Y6CGhf85qcWq/rAoebR96IRDZddY2vuVfi87
4qp+A6VHzA8a195J2gDeBo03cZT2KorC7DssOFciyppzXbljcuVN3mBlH5wn
LV/KhgEDtz7+Ir1GZe7QcbzUHcoX4OvzPcN7lV354T5/cXV7XeRIkvzAcR0W
fitrO1bW4/Yd558r33yL45ZZjDqQ9fXLfc/+nZZcLPr69x97Q+EkohPnQd19
zja/vWfT5DBQwUWvqGYkXLsTmpL4BD+i0mx9Mr+W5gaNN3eNLz+L/d23ubYm
z4ovFV41/lhl7e4zetQy10KNWOLci0VOW72k/j71Ufoy8OCf5UAtKbyxyap5
//Xxd/aMaGI6PfSlsgFAYYJb97omSy7L/y5QeN97eIsxhyu05KY+ygr1wNNK
6r3wppPTm41gJP36Yq9NuwUx72VTH9K5XnTnbLssQd0/PrXPLzzukudQK1wb
NvVR9n1n58uSkvMLO4pBfd6pgwjU6LyFzegyITA1dHdABn9NikLtW9qHyebT
cCUZqL+Z45Bpx5dYmpjarI7M4kCN4g/aym5ZyLyDAOox38u15HxcxaD+VuDi
k9O+n7zv8HYLz339a49NH3d0OqVFEY+my9eDAlC/O2rX153rsfLlFIkDdUn0
fJNhPrJ7wten2wd2XHIuYl67YXvKIqw6lb/mqBFnS5P2w1dHZX1vs8i5X7mc
727qzy4wCDi+k1M5K+5g8jWgGNTic+dcqaKpD5nFibhLm4dZeT54H2rfwv5E
2TWWVazw/VB8/0Xa0jvIDD8cs2s3LwqB4vCp7RzOloiy/u66RfLHFJQbMKbd
gmjZZN/djYpBLSrA1798bHqXXXmpEyoBNcraceG3spo6ysp6YqqptKzl9CXZ
w9J6x4M7+zc62fV0/PP2YZ8z+RJxvuVA3c5ycC/LNVflfxFXeNErrJlyoC5r
SuIT/Dcv0qnvqN0P8h/vmb34jOi3HQ7U331YnhUlFV817lg8qGVz1F+fbBtk
6Xk/T+S01asvyRvK5qglpV9l1fEd1KWvYrcvcvU9HXM56fl7fPf+2o7p9qv+
5DpyxU9O+x6MSZMa/3NgZHenmPdlaYofh231DkvJQRV+Slg3c8eDCovw6Zpr
15blKk92TWU9oy+PdwwynXNa+qQGbinD7AJefhRADR+3mR6K25/VkO1Pv35N
8x5SHtRfUjbZTAvNkXHPTh7U0iiMGXqMkDq5TCVJa3ubDXQ9Vv6GBKsu3d0S
imXu0Wvwjm+glpqX5iffTvvyNefqWqteq2/gYBayg8mc51vHTgpqu/KgxonY
Tgt9eWN1z2G74BYlUY7txgbkSQRzocDSk29fdvKbhtoFvgSoh38DtXjaU1wP
35xZmqTsyJ9il3buuSpBOj31+cWlmJT3XDlF4kAtyQ+f2WtRjPQWXnhmbi/H
s+/zw2f1ciqL6Dnv7PvvdmU1Er/WqveqG4Vl1Yucu/RcWZbzubvvBVCjz2wz
JbicFdc05GuAgVo03yt37txXj7z6A9TfnvL4dFkKanSxvtzfYmXNLKQ8Kopb
1rn7imvfrrH1Dgw2PNn36TiiGNQmXJMvFGX93XU/iY/Jlbnk3HyTfhukDzt8
vr2uj5UU1DdX9xguc4doR5NxAXlfRAUAx4b3LrvyMlCX1S0syztSOVC3qxjU
kq9pu4dZDF2wL+X9ZecevcZsu1TIqrLciZef+riY6GVtPudE+Rai+KKLL8r3
mpFw7a6sKUnkTrA053qI/+8R0fFp8g+Cffdtrq3Js6K0oqtWDtRl7U6asewS
fJGCevP9IpHTKvkJWtsqff8oYtXQJrVq1ek0ZdeZe7KfD0vf394yqGGtOhbL
Y1892NK/bt2WZgMGWg/9bbKz/407e4Y3NGq/5KJwnqW5f85tZ1SnxcBFnjs2
eR69+0HyNd2HpXkTt6aXca3axt3HL/HwiUyv8AGcwozz7tbGdXstCU35Nuot
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
aiyraAryY2IIgiAIgiAIgiAIgoyb/wDc75CY
     "], {{0, 224.22197225346832`}, {362.20472440944883`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96.012, 96.012},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{534.7047244094492, Automatic},
   ImageSizeRaw->{362.20472440944883`, 224.22197225346832`},
   PlotRange->{{0, 362.20472440944883`}, {0, 224.22197225346832`}}]], "Input",
  ExpressionUUID->"5f6b68ef-39f4-4797-8fa8-e3a0fa60cc1c"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
jx4zmt07fMRweo20hpBI+alfkYaEhCjsoK+vr+k802qEIJH+tshKe2BlZQWj
4q+in+UikfJDIuWnfkU6YeKEp0+fyvegqpV9WalKkEh/W3CNwKWsXVxcfMv/
1t27dyv6pByJlB8SKT/1JdK4uDiE1tbRvnb9GhqZmZk1DEEiJXggkfJDIuWn
vkSqo6PTf0D/Vq1b9ezVEw3ZN1OqDYmU4IFEyg+JlJ+GVtpXGxIpwQOJlB8S
KT91JtLuPbqnp6cr9JNIlSGRCgqJlB8SKT91JtJOnTulpaUp9BdU+vX5KkEi
JXggkfJDIuVHaJFi+7WGaamrqzdr3myI5hC03759K0QgEinBA4mUHxIpP0KL
tLCwMDIy8s6dO+07tEcVj3ZOTo4QgUikBA8kUn5IpPwIIdLAoEA3Nzf5nopK
+1qERErwQCLlh0TKjxAivXjxosUyC/kenHE/Pz9Bf5GZRErwQCLlh0TKT+2K
9OHDhzY2NrNmzxo2fBgap06fYv1C/669mERK8EEi5YdEyk/tivTJkyd2dnbz
F8wfPWY0Gp5enqyfRMoPiVRQSKT8kEj5qblIb966qfAB0XJLexIpJyRSQSGR
8kMi5afmIh0+YnhkZKR8z7NnzxRmuSeR8kMiFRQSKT8kUn5qItKQkJAXL14M
GjzIy8sLjUrelCeR8kMiFRQSKT8kUn5qItLJUyaPGz+uTds2I0aOQONx4OOK
liSR8kMiFYigoKBphtN69+k9afKkOCGJjY0ViUSChgBIXaKiogQNgXGIZwRB
Q4CAgIDPnz8LGgJ7gX0RNATOxfPnzzkXfvv2rXLnEM0hDx8+/GUUjK4qb1xV
iIiICA8PFzQEdkHooQtwOupA178hX79+xUCdMXPGnLlzsoQEyU90dLSgIYCP
j4/QUZKTk6E4QUMAFxeXzMxMQUPgskpKShI0RExMzNWrVzkXbt6iOQaJQqfe
BL2wsLDKV8QZV16xdgmWImiIurlArl27Rj9+JxxU2vNDpT0/VSrtIdKCgoJq
RKHSnh8q7QWFRMoPiZQfHpEive/cpTP+mjRt0qlzJzSQmFUpComUHxKpoJBI
+SGR8lORSENfhT548IC1sZvfpCAj/fr1KxqFhYVVikIi5YdEKigkUn5IpPxU
JFJXV1fl32Gk0p5E2tghkfJDIuVHWaTh4eFXr15dbrl8+ozpaDx58kR218uX
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
90zUtX1TUPBmr+7Y/RK5Z3mZdDW9VLKofGmf5WnSzaT0Dkmp8u2cMTv+MtJv
WGiaerz1drsifZki984KiSbFCrHkRXpnRX8skX1lQeeprKfwX8cpvS1vZ8U4
TCndgZ9lkTj7yvwuPxec3Mfy1yKVvkZa+P7AOB3biJRzxqPLbrGE5FMzei+X
Dt6C17vKF+kvDm9lIsU10m/lHTz6Dw/j3stuopHtPa/3El+5cV4QulNb79Cb
kOM7VxprWVx7edLxhuQ1fdlRmyQ5amVF2ltHb7iOdYD8D9phoyZrbQnOZyPV
ZpTEJD9DRO7TGbT6LqqDcFvtoduCJYMvN8BqCDu0PwI2aw1e5st88ePxJi11
C9wo/Og4Re3PXV4XXE/6fWA5xo+ATcMGW/iWigUhp2huDpYd0CoPwtITJi/S
SSUnbDw7YaOUT1gart2NgXJvFP3UXdmRJs4Tea3RUeszZZtfbKHkxlodtb6T
t93Ejdw7KyVjU+mhyu6Cskjf2OqO21+SBJU9QZKDMbJ0yE6Q7m7Z6yXjyvyf
o9xpcu8V/tUfGxVtZwVjQ3qmhrLBoTQ2Uj1Nh659kCs3SJSWKUp0M5oo2W2M
CX21P3d7XnA98XNMyA0epSFRLtip0tdIxUWF0hV/irQo8Z+DqzY6Xb/94PlH
yXtG3wMPLTDZeq00l8p+f93J9bZIsma8i4HGytvfSxb4379nZnZqMWzXq/zU
M9Nbt9CyCa1gIwo/ndx+9A0751ne8ztJigXkwVpTcd3iCVx3wsEPhYUiuwkl
Y7jUQ9LXOfHENlBjc2C21DvD9Q6J8rCCnmSFKKxQKlLpkcsLWD9wyKaSRUeM
PyQb7jhXgzQ2BZU8Bu7I/mfdwOFbgqRD5d/7/q8kFUbw1pEjDPb5pUnXkIgU
5VOBQiw87w2VbDRbor9kiXeHxvUxv/5depp3TTI+HfdfjMPk0h2QEykWHF+6
YNiuicanS0Uq/0ruz8eXrDz5CK7LAolI90Rk/bNu0LAtQRklWxzGnrJyb1mq
jdoleQc3/+WOEZKnE9QxWtLrOffmMrUZZ1J+dXgl54GFzH+2TUsaMfeWhdrM
0woiVSv/YhEXRh2ZpDXB8ljo9wdrtUYYHrifKcl99rKjJrKbqCzSIRvvPd07
QXOxt9wTdqaPucZSX+lzba7fUrU5F6Sv/2RnZBZILtypI/9CtoSUZ56a+Q3J
MEy5sXzCKr/k3IiQ17lF32+t0Jh5Kgk3wiQ3VqrPPJ2UfWNxjxmSXcCDpKfn
5rP7/FeoG5WapeDVTh2D459LNqHKg1Am0tKjJ11yUskJG68tPWEDh20tPWG3
X5W8IPjP2gFD1tyVvHaWKwp6GldYqhGFkZafGvpSVFCYFLBdd/i2oJIbj7fr
jtganC8RKUaewkN9el12F8oXKTOM4gmSPJGNLB2yE6S7W/Z6ycMo71s6yndP
ND4TV92xoXSoFUp75bEhGRzqbHAojo1sf0st86vxad//kw0SpWV+eC/S2RL4
5WtK1o3FPaeXGRM/B0+R8pAoj6LvkT5bJ3Zs2rT5ANMjN15L314q+v5y77i2
TZsP3fBP4pu9Y1q27DZEe6zexD/nrnULDrGf3LZF39KXZ4uSry3t3aJ517Gr
bA/ttj0X9gMHyKFkgfz35xaPMbDxOb9y7KQd95Mr3IbcmytHTFl52OOGz+kt
c4z+vocli+LPGg8Yu9r59iPXOf3Up1nZuW6eqKa35fqTyxaD1UxORH5+4zS9
e3/zy58y/vVaNnKowaq/9mwwGDTU/HRYxKk5fdUNscKmib3Hb758181ETW2u
c+iXPFx0XstHDDVY+ZftBoPBmuZnIko/SlD476VlI7Rwx54N0wZpmp+O+PbB
faF6j8HjDE0s9t9mn9qC6eZtfCAd79lxgbv12g9f7xcdeVou1hb/mPizsweM
W+V8901c0C69DsPW34zJzAw5ZjbH6qy/3ymbnZ4f8nL/vWIxSM3ETbIDM7r1
N7/0qfSl44yQYwuw4G2/kzulCyY+t5vetc88t5fxsheXi0oe//arSJdZPfov
uhCV+O60qVpvk3PR30XuZuo9B42b/nOLJQc27OjUPv3Gm2/et8N4kK7kiTft
9vrhmlMtNu7cOkdLd/PNmKjTlR/eTIQcOBa7FJ3ov34E1rTauW2O1thNNz9E
+a3V6jj1QEhc7P1NI9rp/hXwKfaxtXb7Cbuff5Urf4rizyxacBrDL/+FjanN
c8lYLvx0Zk5fjWlWR1w3TVIbv9XnRdBe/c6aq66LPr/3tBjSfaZD6KfHmzU7
DV9x+uXXkh1J91s1a2+E9I2IL9dWTZz99xn3c2e9nyai/jpnrLO95GHdF8+x
uf0i4KLdkWtRuXj+P7l0nv2j515bVzq/ycUNU/uA517bVji/yS/87GmmpWO+
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

     "], {{0, 240.7199100112486}, {338.2077240344957, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96.012, 96.012},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{465.7077240344959, Automatic},
   ImageSizeRaw->{338.2077240344957, 240.7199100112486},
   PlotRange->{{0, 338.2077240344957}, {0, 240.7199100112486}}]], "Input",
  ExpressionUUID->"04658551-0792-4eba-b00c-d4b417f78ef3"]
}], "Subsubsection",
 CellChangeTimes->{{3.967148865921818*^9, 3.967148875720827*^9}, {
  3.9671490713044453`*^9, 3.9671491179378977`*^9}, {3.967149485785639*^9, 
  3.9671496041537066`*^9}},ExpressionUUID->"80aca139-04e5-4a16-b9da-\
92c6c7779719"],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 4},ExpressionUUID->"dbf65e00-d85a-4df7-b5f8-460a10cdb1c0"],

Cell["\<\
Primero, definiremos nuestros par\[AAcute]metros iniciales, como en la gr\
\[AAcute]fica 3.5 se nos muestra la distribuci\[OAcute]n despu\[EAcute]s de \
100 pasos (Tmax) directamente utilizaremos eso.
En una QW,  el caminate se mueve una unidad hacia cualquier direcci\[OAcute]n \
y sabemos que la posici\[OAcute]n (partiendo de n = 0) siempre la \
encontraremos entre [-t, +t] ,  tendremos entonces 2t +1 posibles posiciones \
(llamaremos L al espacio de posiciones y LP a la lista [-t, +t]).
Adem\[AAcute]s denotamos al operador de moneda Hadamar como H\
\>", "Text",
 CellChangeTimes->{{3.9671493322200937`*^9, 3.9671494131425433`*^9}, {
   3.9671497586380825`*^9, 3.967149758924094*^9}, {3.9671500174731317`*^9, 
   3.9671500433553333`*^9}, {3.967150162783173*^9, 3.9671501669521246`*^9}, {
   3.967150927376211*^9, 3.9671509466143208`*^9}, 3.967151141065833*^9, {
   3.9671511949210787`*^9, 3.9671512471237135`*^9}, {3.9671513417608304`*^9, 
   3.967151412885573*^9}, {3.96715178838244*^9, 3.9671518244754624`*^9}, {
   3.9671518730088663`*^9, 3.967151890248685*^9}, {3.967151943589797*^9, 
   3.967151979004381*^9}, {3.967152099060607*^9, 3.9671521265856295`*^9}, {
   3.9671524442126675`*^9, 3.9671524852302437`*^9}, {3.967152539211604*^9, 
   3.9671525521999927`*^9}, 3.967152802948721*^9, {3.967153352153973*^9, 
   3.9671533709444776`*^9}, {3.967154202673579*^9, 3.96715420339577*^9}, {
   3.9671542345504313`*^9, 3.9671542358325377`*^9}, {3.9671561087467155`*^9, 
   3.9671561246675434`*^9}},ExpressionUUID->"2f506f75-19d9-4459-8c0d-\
4ce7bdd28cf7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tmax", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", 
   RowBox[{
    RowBox[{"2", "*", "Tmax"}], " ", "+", " ", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LP", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "Tmax"}], ",", " ", "Tmax"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.967152500646647*^9, 3.967152595071309*^9}, 
   3.967152653977435*^9, {3.9671526943459597`*^9, 3.9671527142408066`*^9}, {
   3.967152745030676*^9, 3.967152746573053*^9}, {3.9671533728638573`*^9, 
   3.967153405701288*^9}, 3.9671544711165156`*^9, {3.967156099347577*^9, 
   3.967156100369074*^9}, {3.9677604777103777`*^9, 3.9677604785890045`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"bba1fb02-016c-4e0a-a914-f0f4bbff554e"],

Cell["\<\
Nosotros queremos \[OpenCurlyDoubleQuote]condicionar\[CloseCurlyDoubleQuote] \
el movimiento del caminante dependiendo del valor de la moneda, para esto es \
necesario recordar que trabajamos con espacios de Hilbert y \
espec\[IAcute]ficamente el espacio moneda es de base {|0>, |1>}. Necesitamos \
los operadores |0> y |1> para saber a d\[OAcute]nde se mueve el caminante \
(derecha o izquierda, respectivamente), haremos entonces una \
proyecci\[OAcute]n sobre ellos mismos\
\>", "Text",
 CellChangeTimes->{{3.9671547019571714`*^9, 3.9671548640603056`*^9}, {
  3.9671549854459143`*^9, 3.9671550098009844`*^9}, {3.9671550531584177`*^9, 
  3.967155086264594*^9}, {3.9671552065574255`*^9, 
  3.967155223992193*^9}},ExpressionUUID->"dffcb9e4-2124-4c3e-a414-\
b911734e4111"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P0", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"|", 
    RowBox[{"0", ">", "<", "0"}], "|"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P1", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"|", 
    RowBox[{"1", ">", "<", "1"}], "|"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.967155111060306*^9, 3.967155197574774*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"7c89e58f-0e2e-46bf-a62a-d1cd701868ad"],

Cell["\<\
Ya que definimos todo lo anterior, veamos c\[OAcute]mo es el movimiento del \
caminante. 
Para esto recordemos el operador Shift (u matriz de desplazamiento), si en el \
operador moneda tenemos |0> iremos a la derecha de una posici\[OAcute]n n a \
una posici\[OAcute]n n+1 y si el operador moneda tenemos |1> iremos a la \
izquierda desde una posici\[OAcute]n n a una n-1. 
Tendremos la transformaci\[OAcute]n |i> -> |i + 1> y  |i> -> |i + 1>\
\>", "Text",
 CellChangeTimes->{{3.967157376411539*^9, 3.967157412581145*^9}, {
   3.9671575992202063`*^9, 3.967157613081318*^9}, {3.9671577022567472`*^9, 
   3.9671577087970905`*^9}, {3.9671578836750193`*^9, 3.967158012134426*^9}, {
   3.967158101630557*^9, 3.9671581522298136`*^9}, {3.9671655577385674`*^9, 
   3.967165559005246*^9}, {3.9671658006743007`*^9, 3.967165806118533*^9}, 
   3.967166430036656*^9, {3.967166757367942*^9, 
   3.9671668217279763`*^9}},ExpressionUUID->"90097807-21ed-4692-9c8f-\
37b4819ce2c1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SR", " ", "=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", " ", "+", " ", "1"}], ",", " ", "i"}], "}"}], " ", "->",
          " ", "1"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", 
          RowBox[{"L", "-", "1"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"L", ",", "L"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"desplazamiento", " ", "a", " ", "la", " ", "derecha"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SL", "=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", " ", "i"}], "}"}], " ", "->", " ", 
         "1"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "2", ",", " ", "L"}], "}"}]}], " ", "]"}], ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"L", ",", "L"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"desplazamiento", " ", "a", " ", "la", " ", "izquierdA"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.9671571453551407`*^9, 3.9671572799492545`*^9}, {
  3.967165626764331*^9, 3.967165656898901*^9}, {3.9671663850329137`*^9, 
  3.967166404088445*^9}, {3.967761107486754*^9, 3.967761137074711*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"4ca7d704-fe62-4554-a1ff-2dd4771b6aa1"],

Cell["\<\
De estos dos operadores obtenemos un operador \[OpenCurlyDoubleQuote]completo\
\[CloseCurlyDoubleQuote] , combinamos (Kronecker; moneda, posici\[OAcute]n) \
las proyecciones con los desplazamientos (por definici\[OAcute]n de la matriz \
de desplazamiento.  \
\>", "Text",
 CellChangeTimes->{{3.9671670337572174`*^9, 3.9671671283282337`*^9}, {
  3.967167182356818*^9, 
  3.967167197545849*^9}},ExpressionUUID->"8f7f5a42-bf9c-430e-929a-\
234916abf106"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SC", " ", "=", " ", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"P0", ",", " ", 
      RowBox[{"Normal", "[", "SR", "]"}]}], "]"}], " ", "+", " ", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"P1", ",", " ", 
      RowBox[{"Normal", "[", "SL", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.967166938742523*^9, 3.9671670028918133`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"0b1b7c11-436a-4bab-977d-53f9a4176cfb"],

Cell["\<\
Ya que construimos la matriz de desplazamiento podemos obtener el operador de \
evoluci\[OAcute]n U = S(H x I)\
\>", "Text",
 CellChangeTimes->{{3.9671672492362385`*^9, 3.9671672818645115`*^9}, {
  3.967167523849946*^9, 
  3.9671675340186515`*^9}},ExpressionUUID->"bf39f9eb-e746-41d2-ad54-\
d06cf8947261"],

Cell[BoxData[
 RowBox[{
  RowBox[{"U", " ", "=", " ", 
   RowBox[{"SC", ".", " ", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H", ",", " ", 
      RowBox[{"IdentityMatrix", "[", "L", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9671673534859257`*^9, 3.9671673933350267`*^9}, {
  3.9677609835696497`*^9, 3.9677609875705566`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"c1104849-607c-455e-a70f-cc12c874b2f1"],

Cell["\<\
En el caso de la figura 3.3 se nos dice que tenemos un estado inicial, el \
cual es \
\>", "Text",
 CellChangeTimes->{{3.9671676309229217`*^9, 
  3.9671676508523273`*^9}},ExpressionUUID->"ddb50105-8d7d-4f5d-9185-\
ee1562b4e746"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"M0", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "I"}]}], "}"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"|", 
        RowBox[{"0", ">", 
         RowBox[{"-", "i"}]}], "|", 
        RowBox[{"1", ">"}]}], ")"}], "/", "sqrt"}], 
     RowBox[{"(", "2", ")"}]}], ",", " ", 
    RowBox[{"estado", " ", "inicial", " ", "de", " ", "la", " ", "moneda"}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PI0", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"L", "+", "1"}], ")"}], "/", "2"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"n", "=", "0"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pos0", "=", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PI0", "->", "1"}], "}"}], ",", 
      RowBox[{"{", "L", "}"}]}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "estado", " ", "de", " ", "posici\[OAcute]n", " ", "en", " ", "n"}], "=", 
    "0"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"psi0", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"M0", ",", "pos0"}], "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Estado", " ", "global"}], ",", " ", 
    RowBox[{
    "producto", " ", "tensorial", " ", "moneda", " ", "x", " ", 
     "posivion"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.967167670143256*^9, 3.9671677139666553`*^9}, {
   3.9671677463209667`*^9, 3.967167815575825*^9}, {3.9671680592694607`*^9, 
   3.9671680775783668`*^9}, 3.9671681206150846`*^9, {3.967168172359735*^9, 
   3.967168177822347*^9}, {3.9671682871833935`*^9, 3.9671683710755477`*^9}, 
   3.967752841279503*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"0f947081-1128-4922-ae65-fd5ae9a48558"],

Cell["Todos los estados estar\[AAcute]n dados por la siguiente lista", "Text",
 CellChangeTimes->{{3.9671923525533266`*^9, 
  3.967192362844205*^9}},ExpressionUUID->"0f6826f1-cc0c-4e3f-a3ef-\
8b507a9cabf9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"states", " ", "=", " ", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"U", ".", "#"}], " ", "&"}], ",", " ", "psi0", ",", " ", 
     "Tmax"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9671923749630303`*^9, 3.967192407516814*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"1ad98d6b-25c7-41ae-9d45-6d766b5891bd"],

Cell["\<\
Hasta aqu\[IAcute], ya hemos definido la evoluci\[OAcute]n del sistema. Ya \
podemos empezar a calcular probabilidad, distribuci\[OAcute]n... 
Primero, organizremos los posibles estados en una matriz 2xL (HC = 2D y Hp = \
LD)\
\>", "Text",
 CellChangeTimes->{{3.967752961669513*^9, 3.9677530359079046`*^9}, {
  3.9677541425554647`*^9, 3.9677541559915333`*^9}, {3.9677541909373765`*^9, 
  3.9677542115669956`*^9}, {3.967754486637783*^9, 3.96775448996442*^9}, {
  3.9677545417985573`*^9, 
  3.967754550646957*^9}},ExpressionUUID->"5ee0e899-5204-4acb-ad83-\
3322854dfc1b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"reshape", "[", "stateVec_", "]"}], ":=", 
    RowBox[{"ArrayReshape", "[", 
     RowBox[{"stateVec", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "L"}], "}"}]}], "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{
  3.9677545655872383`*^9, {3.9677562010540843`*^9, 3.9677562032011366`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"05f90001-7b07-43d7-b8b0-c37ee93bf386"],

Cell["\<\
Ahora podemos pasar a la distribuci\[OAcute]n de probabilidades de las \
posiciones \
\>", "Text",
 CellChangeTimes->{{3.9677574835282965`*^9, 3.9677575040907307`*^9}, 
   3.967757639858651*^9},ExpressionUUID->"952d2199-657e-4385-917c-\
04d7998f9df7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ProbP", "[", "stateVec_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", "=", 
       RowBox[{"reshape", "[", "stateVec", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", "m", "]"}], "^", "2"}], ",", 
       RowBox[{"{", "1", "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9677563313737907`*^9, 3.967756361363508*^9}, {
   3.967756704566117*^9, 3.9677567093434467`*^9}, 3.967760654805832*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"bb57bf9b-79b9-440c-932d-c326e418504f"],

Cell["\<\
Calculamos hora la desviaci\[OAcute]n est\[AAcute]ndar usando la distribuci\
\[OAcute]n de probabilidades anterior \
\>", "Text",
 CellChangeTimes->{{3.967759864127489*^9, 
  3.967759898590561*^9}},ExpressionUUID->"213b0447-4174-4ef9-b7b0-\
7650a7d27f6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stdFromState", "[", "stateVec_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"ProbP", "[", "stateVec", "]"}]}], ",", "mean", ",", 
        "mean2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mean", "=", 
        RowBox[{"Total", "[", 
         RowBox[{"LP", "*", "p"}], "]"}]}], ";", " ", 
       RowBox[{"(*", "media", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"mean2", "=", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"LP", "^", "2"}], ")"}], "*", "p"}], "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"valor", " ", "medio", " ", "cuadratico"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"mean2", "-", 
         RowBox[{"mean", "^", "2"}]}], "]"}]}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"raiz", " ", "de", " ", "la", " ", "varianza"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9677597692485924`*^9, 3.967759842944768*^9}, {
  3.9677599515556383`*^9, 3.9677599980989065`*^9}, {3.967760697027379*^9, 
  3.9677607255527763`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"75ce9d45-7dec-4d0a-9d5a-73529e2da582"],

Cell["\<\
Ya tenemos todo para empezar a construir nuestras gr\[AAcute]ficas, primero \
iniciaremos con la figura 3.5\
\>", "Text",
 CellChangeTimes->{{3.96776002587677*^9, 
  3.967760073020816*^9}},ExpressionUUID->"574c52b1-44c4-4d5d-858e-\
155c5a818b04"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"prob100", "=", 
    RowBox[{"ProbP", "[", 
     RowBox[{"states", "[", 
      RowBox[{"[", "101", "]"}], "]"}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "101", " ", "porque", " ", "states", " ", "empieza", " ", "en", " ", 
     "t"}], "=", "0"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"fig35", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"LP", ",", "prob100"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Filling", "->", "Axis"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Joined", "->", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Cross]\>\"", ",", "7"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Posicion n\>\"", ",", "\"\<Probabilidad\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", " ", 
      "->", "\"\<Distribuci\[OAcute]n de probabilidades despu\[EAcute]s de \
100 pasos usando una moneda de Hadamard.\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "fig35"}], "Input",
 CellChangeTimes->{{3.9677601074557676`*^9, 3.9677601214924345`*^9}, {
  3.9677601578194747`*^9, 3.96776015953329*^9}, {3.96776018989867*^9, 
  3.967760234159198*^9}, {3.9677602979390564`*^9, 3.967760349366166*^9}, {
  3.9677613371267395`*^9, 3.9677613397750998`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"2b75792d-ad89-4b0c-892e-69f2155ff409"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
      LineBox[{{-100., 0.}, {-100., 7.888609052210118*^-31}}], 
      LineBox[{{-98., 0.}, {-98., 7.57779785555304*^-27}}], 
      LineBox[{{-96., 0.}, {-96., 1.641060556927486*^-23}}], 
      LineBox[{{-94., 0.}, {-94., 1.4164481830219817`*^-20}}], 
      LineBox[{{-92., 0.}, {-92., 6.128438105044332*^-18}}], 
      LineBox[{{-90., 0.}, {-90., 1.5015251101227766`*^-15}}], 
      LineBox[{{-88., 0.}, {-88., 2.2420873831779697`*^-13}}], 
      LineBox[{{-86., 0.}, {-86., 2.1382052613795864`*^-11}}], 
      LineBox[{{-84., 0.}, {-84., 1.3420382381482196`*^-9}}], 
      LineBox[{{-82., 0.}, {-82., 5.6446344830122337`*^-8}}], 
      LineBox[{{-80., 0.}, {-80., 1.6042973785629996`*^-6}}], 
      LineBox[{{-78., 0.}, {-78., 0.00003078921210931956}}], 
      LineBox[{{-76., 0.}, {-76., 0.0003947754256999021}}], 
      LineBox[{{-74., 0.}, {-74., 0.00330304065521999}}], 
      LineBox[{{-72., 0.}, {-72., 0.017266686185868362`}}], 
      LineBox[{{-70., 0.}, {-70., 0.05201473597910576}}], 
      LineBox[{{-68., 0.}, {-68., 0.07609895053005149}}], 
      LineBox[{{-66., 0.}, {-66., 0.03276558129322602}}], 
      LineBox[{{-64., 0.}, {-64., 0.007807203373856617}}], 
      LineBox[{{-62., 0.}, {-62., 0.037875737551524985`}}], 
      LineBox[{{-60., 0.}, {-60., 0.006518888608630657}}], 
      LineBox[{{-58., 0.}, {-58., 0.02627591478199404}}], 
      LineBox[{{-56., 0.}, {-56., 0.006778137003083982}}], 
      LineBox[{{-54., 0.}, {-54., 0.02183467485925707}}], 
      LineBox[{{-52., 0.}, {-52., 0.006081308967667164}}], 
      LineBox[{{-50., 0.}, {-50., 0.016087207048439675`}}], 
      LineBox[{{-48., 0.}, {-48., 0.011291460510828973`}}], 
      LineBox[{{-46., 0.}, {-46., 0.007109134717427611}}], 
      LineBox[{{-44., 0.}, {-44., 0.013747056606403473`}}], 
      LineBox[{{-42., 0.}, {-42., 0.009402358388409998}}], 
      LineBox[{{-40., 0.}, {-40., 0.006434399782737226}}], 
      LineBox[{{-38., 0.}, {-38., 0.010133034467687745`}}], 
      LineBox[{{-36., 0.}, {-36., 0.010305072653989554`}}], 
      LineBox[{{-34., 0.}, {-34., 0.007175181612314414}}], 
      LineBox[{{-32., 0.}, {-32., 0.006477206756100193}}], 
      LineBox[{{-30., 0.}, {-30., 0.008007410437945605}}], 
      LineBox[{{-28., 0.}, {-28., 0.008696161271412782}}], 
      LineBox[{{-26., 0.}, {-26., 0.00786484265363574}}], 
      LineBox[{{-24., 0.}, {-24., 0.006779713431561039}}], 
      LineBox[{{-22., 0.}, {-22., 0.006357139342318666}}], 
      LineBox[{{-20., 0.}, {-20., 0.00652228010143599}}], 
      LineBox[{{-18., 0.}, {-18., 0.006816894531582564}}], 
      LineBox[{{-16., 0.}, {-16., 0.0069498678556477065`}}], 
      LineBox[{{-14., 0.}, {-14., 0.006890877382529088}}], 
      LineBox[{{-12., 0.}, {-12., 0.006733592576622253}}], 
      LineBox[{{-10., 0.}, {-10., 0.006570049750349994}}], 
      LineBox[{{-8., 0.}, {-8., 0.006445981733926293}}], 
      LineBox[{{-6., 0.}, {-6., 0.006368497033603703}}], 
      LineBox[{{-4., 0.}, {-4., 0.006326956828264612}}], 
      LineBox[{{-2., 0.}, {-2., 0.006308107391246099}}], 
      LineBox[{{0., 0.}, {0., 0.0063028571978284995`}}], 
      LineBox[{{2., 0.}, {2., 0.006308107391246099}}], 
      LineBox[{{4., 0.}, {4., 0.006326956828264612}}], 
      LineBox[{{6., 0.}, {6., 0.006368497033603703}}], 
      LineBox[{{8., 0.}, {8., 0.006445981733926293}}], 
      LineBox[{{10., 0.}, {10., 0.006570049750349994}}], 
      LineBox[{{12., 0.}, {12., 0.006733592576622253}}], 
      LineBox[{{14., 0.}, {14., 0.006890877382529088}}], 
      LineBox[{{16., 0.}, {16., 0.0069498678556477065`}}], 
      LineBox[{{18., 0.}, {18., 0.006816894531582564}}], 
      LineBox[{{20., 0.}, {20., 0.00652228010143599}}], 
      LineBox[{{22., 0.}, {22., 0.006357139342318666}}], 
      LineBox[{{24., 0.}, {24., 0.006779713431561039}}], 
      LineBox[{{26., 0.}, {26., 0.00786484265363574}}], 
      LineBox[{{28., 0.}, {28., 0.008696161271412782}}], 
      LineBox[{{30., 0.}, {30., 0.008007410437945605}}], 
      LineBox[{{32., 0.}, {32., 0.006477206756100193}}], 
      LineBox[{{34., 0.}, {34., 0.007175181612314414}}], 
      LineBox[{{36., 0.}, {36., 0.010305072653989554`}}], 
      LineBox[{{38., 0.}, {38., 0.010133034467687745`}}], 
      LineBox[{{40., 0.}, {40., 0.006434399782737226}}], 
      LineBox[{{42., 0.}, {42., 0.009402358388409998}}], 
      LineBox[{{44., 0.}, {44., 0.013747056606403473`}}], 
      LineBox[{{46., 0.}, {46., 0.007109134717427611}}], 
      LineBox[{{48., 0.}, {48., 0.011291460510828973`}}], 
      LineBox[{{50., 0.}, {50., 0.016087207048439675`}}], 
      LineBox[{{52., 0.}, {52., 0.006081308967667164}}], 
      LineBox[{{54., 0.}, {54., 0.02183467485925707}}], 
      LineBox[{{56., 0.}, {56., 0.006778137003083982}}], 
      LineBox[{{58., 0.}, {58., 0.02627591478199404}}], 
      LineBox[{{60., 0.}, {60., 0.006518888608630657}}], 
      LineBox[{{62., 0.}, {62., 0.037875737551524985`}}], 
      LineBox[{{64., 0.}, {64., 0.007807203373856617}}], 
      LineBox[{{66., 0.}, {66., 0.03276558129322602}}], 
      LineBox[{{68., 0.}, {68., 0.07609895053005149}}], 
      LineBox[{{70., 0.}, {70., 0.05201473597910576}}], 
      LineBox[{{72., 0.}, {72., 0.017266686185868362`}}], 
      LineBox[{{74., 0.}, {74., 0.00330304065521999}}], 
      LineBox[{{76., 0.}, {76., 0.0003947754256999021}}], 
      LineBox[{{78., 0.}, {78., 0.00003078921210931956}}], 
      LineBox[{{80., 0.}, {80., 1.6042973785629996`*^-6}}], 
      LineBox[{{82., 0.}, {82., 5.6446344830122337`*^-8}}], 
      LineBox[{{84., 0.}, {84., 1.3420382381482196`*^-9}}], 
      LineBox[{{86., 0.}, {86., 2.1382052613795864`*^-11}}], 
      LineBox[{{88., 0.}, {88., 2.2420873831779697`*^-13}}], 
      LineBox[{{90., 0.}, {90., 1.5015251101227766`*^-15}}], 
      LineBox[{{92., 0.}, {92., 6.128438105044332*^-18}}], 
      LineBox[{{94., 0.}, {94., 1.4164481830219817`*^-20}}], 
      LineBox[{{96., 0.}, {96., 1.641060556927486*^-23}}], 
      LineBox[{{98., 0.}, {98., 7.57779785555304*^-27}}], 
      LineBox[{{100., 0.}, {100., 7.888609052210118*^-31}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[Cross]\"\>",
        StripOnInput->False,
        FontSize->7], {0., 0.}], CompressedData["
1:eJxd121MW2UUB/BnoAbFLIvZC2HLxIlzwVpbChuFAqe0QKHvLX2Z85OiGGeG
YgQGLqubC8mccYtvcXwAs2zGxcxtqDg+uGOIC3PgJCNMUWO2D2aiSxxmRoka
C/e5yvnf5Obm5Jf/vU/vy/Oc3vNoe+zxXKXU+ey+LLvnKHPbysbxpHPxwGlW
S7eMrkf3VC4eCVwt1kXT044qI5+C/EJdMPTbJ18ZTuAqW3vHRq2eR1xGPgn5
bJ3s//3VO781nMBVklsndvf/8Uq42sgnIJ/g5nTSu3fPsOEErhKcyLGPpJev
qTHyLZDP1mWrHdeDOwwncNXCY4e9A22zIzofh3yc83wX6p8vVrVGHlzFeWRy
dn/VD07DOQb5GJ8av94xv3y7zoOrGOeunj217cQhnY9CPso7nrvy8/vvHNd5
cBXl/tT5voreIZ2PQD7CE70Pdh87N6jz4CrCqZ6B0o753YZnwuBhnvrL9l1H
6xHtIfAQj8+smj4w1KM9CB7kydyjX9x17bD2AHiA7RcKAq2jvdr94H7e9/Vn
zqltb2pvBm/m0+eK5j6+1q29CbyJXeODtpKdB7X7wH18y+Ublvm7+7Q3gjfy
0YlLk13rd2lvAG/gH3vjHz51/wHt9eD1fPAtr/Vl917tXnAvW1ZY77j5sHn/
POAe7rz1oe8H+SXtdeB1PFDofuZS4T7tbnA3T4Wu3nfmMXP8BE68q/Pvuct9
+vqqFryGnQ+82257IqO9GtzFlu41Of6LL2qvAq9kfvJq+Nm1Zt4JXsH537R3
5X+un7/aAr6Zj6eL375xuzm+cvAyLnKfrlo7bLoDvJTLRy32vF/M89vBbex4
7+m5zq4XtFvBLTz20fzFfqfpJeCbeNi1/Z8Tr5vn3whezDPOPwOlP5nj2wBe
xD33fplf2Gb6OvACPtv1advMKtNXgq/gM5OH9vtnd2rPA1e87Ob6D/qmTf/1
LLi68sZr6dsm//NaYJL5PILrk7z+SvACkuNfB15E8vdvAC8mef82gm8ief9L
wC0kn58V3Eby+dvBS0m+Pw7wMpLvXzn4ZpLv7xbwCpLvvxO8kuT3UwXuIvn9
VYPXkPx+a8GJxPefIXA3yfnDDV5Hcv6pA/eQnL884F6S858XvJ7k/FkP3kBy
/m0AbyQ5fzeC+0jO/z7wJpLrRxN4M8n1pxncT3L98oMHSK5/AfAgyfUzCB4i
uf6GwMMk1+8weITE+k8R6ZkIif6BwVWURP9BUchHSfQvDK5iJPofikE+RqJ/
YnAVJ9F/URzycRL9G4OrFhL9H7VAPlsv7R8ZXCVI9J+UgHyCRP/K4CpJov+l
JOSz9dL+mcFVikT/TSnIL9RL+ncGV+mF+v/+n9KQ17X5/4HB1VZdn3T+C0EH
MgE=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Posicion n\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Probabilidad\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Distribuci\[OAcute]n de probabilidades despu\[EAcute]s de 100 pasos \
usando una moneda de Hadamard.\"", TraditionalForm],
  PlotRange->{{-100., 100.}, {0, 0.07609895053005149}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9677613413475103`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"01df8907-2df3-4932-b998-8eeb9442be10"]
}, Open  ]],

Cell["Ahora intentaremos replicar la imagen 3.6", "Text",
 CellChangeTimes->{{3.967761881295787*^9, 
  3.9677619033538723`*^9}},ExpressionUUID->"62b4ed07-3b73-45d5-bf7e-\
ee50fb60995b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"QStdL", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"stdFromState", "[", 
       RowBox[{"states", "[", 
        RowBox[{"[", 
         RowBox[{"t", "+", "1"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "Tmax"}], "}"}]}], "]"}]}], ";"}], 
  "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CStdL", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "Tmax"}], "}"}]}], "]"}]}], ";"}], 
  "                    ", 
  RowBox[{"(*", 
   RowBox[{"sigma", "=", 
    RowBox[{"sqrt", 
     RowBox[{"(", "t", ")"}]}]}], "*)"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Ps", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "Tmax"}], "]"}]}], ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.9677620346436462`*^9, 3.9677621227421274`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"ebe792f9-0e0f-42ef-8fd4-9e9739c32c81"],

Cell["Con esto ya podemos construir la figura", "Text",
 CellChangeTimes->{{3.9677621931914062`*^9, 
  3.9677622030292063`*^9}},ExpressionUUID->"e5fe71d7-bdd2-489a-b3e1-\
0a06a7c58142"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fig36", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"Ps", ",", "QStdL"}], "}"}], "]"}], ",", 
       RowBox[{"(*", "ruces", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"Ps", ",", "CStdL"}], "}"}], "]"}]}], "   ", 
      RowBox[{"(*", "c\[IAcute]rculos", "*)"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<\[Cross]\>\"", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<\[FilledCircle]\>\"", ",", "6"}], "}"}]}], "}"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"Joined", "->", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<t pasos\>\"", 
        ",", "\"\<Desviaci\[OAcute]n est\[AAcute]ndar\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Hadamard\>\"", ",", "\"\<Caminata cl\[AAcute]sica\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "->", "\"\<Desviaci\[OAcute]n est\[AAcute]ndar vs no. de pasos\>\""}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", "fig36"}], "Input",
 CellChangeTimes->{
  3.9677621860084314`*^9, {3.9677622196468163`*^9, 3.9677622519626904`*^9}, {
   3.967762305386676*^9, 3.967762392467816*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"95f0b7eb-dc91-4690-bcc1-cb62b3000304"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox["\"\[Cross]\"", FontSize -> 8, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1y3lM02ccx/EfoEMbOabcdsjZEkGQQwFb4NMCpZSWllKgG6ACU2CAgFfH
MfhJ4o3CpgOc4/jDEcJYZCoLKMOCyygQEHHIBsPNA4ZoCE7nyMYOE7/+sT/2
JE+evPJ+Ps7p+epdJgzD7Hp5jV5eY+b/zmLYf18Gw4Ly3Q1NL8ir0CrXzhV/
9SfZEi3Pa8/rHhjhla3o/xtkOywvZGT7j3PIXEw1JEeWdZmTndB1VTLoWfYm
2QW63A553fV1ZDcMV9R8FvPQmsyD1qL87+VntmQPHGq99XWWgwN5I/5KtxKk
q7lkL3Rzb2WNFzmSvVHT9cPACpkTeTN+5+cq1253JvuiRmBfP6VzIfuhlH9v
p0ulK9kfguaEoG/Ou5EDwM2xPODf7k7eAuTPK3oNPPJWrLowkhY7zScHovKC
19yOBQ9yEIR5deUmJhvJwRif5I8POXiSt2E2nvML6+NFFsCT47BUJNpEFuKL
WvFtYaI3OQTfZafdLM/zIYei3TrtPk+0mRyGmhmPa4WDrw0YNtQJpjW+r8wC
T1p3+il/JjMiJKssCnve86MuglleKVf0nMyIcXG7qORymT91MXyUcDfmBFAP
R3/JPg/dWTIbDo7fYoir4xbqEfjHbJH9pIXMRqAy29ZuxH8r9UiYdwbKonrI
bCRS3hFYr5MGUpdgqL7w2akxMivB2ae3BW2pQdSjMLAkqfKYI7NRWHPaUWy2
N5i6FPUT+T+eWCazUhwxaTGpO7qNejQKVof32KwVUI/GB4Enciw+JTMy5Cxp
3at4QuoyRBS9JT39JZmJQa9TwIy5MIR6DDwuy+7bfktm5DBqzpWdU4VSl+Pz
UXtD5RSZUcBedGbWfHcYdQUc5iez3BfJTCwK2nutNSGgHovph5sWDBVkRonG
khvnOIbXXYnVP1kdW28moq5Ca+zywVQ1GSp03uhzHaklsyq0FD9VWk6T9Sr0
ZKRa8lzEtI+D03D+/qxMMuKgunLo5HgbmY1D9Z5uF7tfyfo4NM+3rfQLDKe9
Glcnbg7tLyVDjeMH3Prv9pJZNfrkeZ3OphG0V+OwWOETJicz8ZiISZRWfEhG
PBrC5ZWP7pDZeHxcaDHoxY2kfTwuCbp3KNLIjAYXbYqvVzeToYHrmqONvz0m
sxqsnx1wDPaV0F6D0EzTvSkHyUwCQtyqzZuukZGAmBr9qLFRFO0TwO87fkwi
IesTsOfO3ajck2QmEVVXzOzbR8lIRKZp25KljZT2iVAWnLmnSSbrE2FXwTeU
NpGZJHy0QdivnyEjCW2Rky82eEbTPgk87w7OuwVkfRJWpMxNn+ogM1pkXApZ
OfYHGVrYfi9r94GM9lroXJ882neYrNeibux9XeMgmXkbjwsUfQ8sYvAvYm+Y
ig==
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 6, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx11H9MlHUcB/CHlCMMUhHBEoET5hThuOQEwfTe/JIfwgH3iyNcJhx2LYtb
S2xtnU9rzkaIbsypBSj+mIAaQzYH1cZhjvkHFqA0QWY2F/NXZLMRclq58f60
+Ue3Pfvs9bzvfXfPc9/vo62oNlfNURSl6tnh9+x4Qfm/10Pj81PBlfW7tzcf
m6JfRHuB487HF3z0Asj7ZkcoWv889NWu2370Eui0gaH1h+fQEbg3Pdy2O86f
jubna+jlkO+ZnbGwlI+lOQoC6RUwVD9t+ODzefRK/p6X6Dg8KtuWtfp6EB2P
PKNr4b3JYFqHMVNR503fy7Qez1/Hawj4rWP7fI94DUZ3/DxQMy1OwuNCp+Gz
6oW0gdcrXos9kYt76q0hdDJO261lTy6KUxA2d9fOSd0ieh3vjzj1v/s4O9Mw
lRiytapKvB5qaoZu/LL4dd7PxfQGPBptPemqFW/E/lPJw+fuiI34vs/l78wO
o8H7T6vAw8GKlvdnJE/H8RNdwb+aw5mnI+Fiw9CCdlrJ4FzCPAOp45VdvVZa
yUSZ5q/YLa2SZ6L26ht9t2Ykz+L/+wrzLCj/HD0y0Egr2XCGrMjPeSB5Nt5q
WRY3lPYq801cD7S6CU8mK99JGpE8BzGD7oil2qXMczDRsLZbv4NWcrl+JM/l
+QjOPHjnRSn9ubSahx8yE5qGD0iez/UmeT7u+mqiRyKXMd+M/s7gyBEnrW7G
9V/af09sl7yA61PyAmz50T4QkBTJvBDuS02p+2potRA3msuzPT2Sm7ieJTfB
9aEp/PyGKOZFCCnad9/nodUibN35nae3V/JizujZiWIMfrPNeCuKVosR1J08
9amR9hbji2sz9RNv0koJ94v0SxA4WH/laaP0S3Cj42xA17fSL4HGd7BQPyZ9
M/eX9M04Efp1694wLftmmPxSZioNtNeM+4kpQ0FmWrFwP9Kw4PbVn7SX66Rv
wdw/3ts/3iZ9C9zdCe/29Uvfyv0rfSvPL2ffitjpUXd5BO21YmWjv7d2Ha3Y
uN9p2PCl7oDW5Za+DYaPknrC66Rvw8RwfFrzaenb+XyQvh3peyv619yUvh2e
SzHxGY+lb8eZVW361aEx7JfyeUKjFPDvPFSXR6ul0Fiy9Bon7S1Fy8H518o9
0nfw+SN9ByrslZ80nZe+AxZrx5HaAek78PaivydtE9Iv44zFv1PUgh0=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"t pasos\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Desviaci\[OAcute]n est\[AAcute]ndar\"", HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Desviaci\[OAcute]n est\[AAcute]ndar vs no. de pasos\"", 
       TraditionalForm], PlotRange -> {{0, 100.}, {0, 54.124138152897864`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Hadamard\"", "\"Caminata cl\[AAcute]sica\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[Cross]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], FontSize -> 8, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 8}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 6, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 6}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.10666666666666666`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[Cross]\"", ",", "8"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "6"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.967762393336644*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"9b518438-bada-4b0c-979a-2f7756d2aca8"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1435.5, 761.25},
WindowMargins->{{-1442.25, 812.25}, {264., 390.}},
Magnification:>1. Inherited,
FrontEndVersion->"14.2 for Linux x86 (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"67142a04-cbb5-4dbc-b886-b52320de0af4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 66955, 1109, 300, "Subsubsection",ExpressionUUID->"80aca139-04e5-4a16-b9da-92c6c7779719"],
Cell[67538, 1133, 329, 10, 6, "Text",ExpressionUUID->"dbf65e00-d85a-4df7-b5f8-460a10cdb1c0"],
Cell[67870, 1145, 1570, 23, 58, "Text",ExpressionUUID->"2f506f75-19d9-4459-8c0d-4ce7bdd28cf7"],
Cell[69443, 1170, 1208, 30, 69, "Input",ExpressionUUID->"bba1fb02-016c-4e0a-a914-f0f4bbff554e"],
Cell[70654, 1202, 781, 13, 41, "Text",ExpressionUUID->"dffcb9e4-2124-4c3e-a414-b911734e4111"],
Cell[71438, 1217, 862, 26, 40, "Input",ExpressionUUID->"7c89e58f-0e2e-46bf-a62a-d1cd701868ad"],
Cell[72303, 1245, 973, 16, 58, "Text",ExpressionUUID->"90097807-21ed-4692-9c8f-37b4819ce2c1"],
Cell[73279, 1263, 1577, 44, 40, "Input",ExpressionUUID->"4ca7d704-fe62-4554-a1ff-2dd4771b6aa1"],
Cell[74859, 1309, 460, 9, 25, "Text",ExpressionUUID->"8f7f5a42-bf9c-430e-929a-234916abf106"],
Cell[75322, 1320, 489, 11, 23, "Input",ExpressionUUID->"0b1b7c11-436a-4bab-977d-53f9a4176cfb"],
Cell[75814, 1333, 315, 7, 25, "Text",ExpressionUUID->"bf39f9eb-e746-41d2-ad54-d06cf8947261"],
Cell[76132, 1342, 430, 9, 23, "Input",ExpressionUUID->"c1104849-607c-455e-a70f-cc12c874b2f1"],
Cell[76565, 1353, 238, 6, 25, "Text",ExpressionUUID->"ddb50105-8d7d-4f5d-9185-ee1562b4e746"],
Cell[76806, 1361, 1969, 61, 83, "Input",ExpressionUUID->"0f947081-1128-4922-ae65-fd5ae9a48558"],
Cell[78778, 1424, 206, 3, 25, "Text",ExpressionUUID->"0f6826f1-cc0c-4e3f-a3ef-8b507a9cabf9"],
Cell[78987, 1429, 375, 9, 23, "Input",ExpressionUUID->"1ad98d6b-25c7-41ae-9d45-6d766b5891bd"],
Cell[79365, 1440, 579, 11, 41, "Text",ExpressionUUID->"5ee0e899-5204-4acb-ad83-3322854dfc1b"],
Cell[79947, 1453, 436, 11, 22, "Input",ExpressionUUID->"05f90001-7b07-43d7-b8b0-c37ee93bf386"],
Cell[80386, 1466, 261, 6, 25, "Text",ExpressionUUID->"952d2199-657e-4385-917c-04d7998f9df7"],
Cell[80650, 1474, 671, 17, 37, "Input",ExpressionUUID->"bb57bf9b-79b9-440c-932d-c326e418504f"],
Cell[81324, 1493, 265, 6, 25, "Text",ExpressionUUID->"213b0447-4174-4ef9-b7b0-7650a7d27f6b"],
Cell[81592, 1501, 1310, 33, 71, "Input",ExpressionUUID->"75ce9d45-7dec-4d0a-9d5a-73529e2da582"],
Cell[82905, 1536, 256, 6, 25, "Text",ExpressionUUID->"574c52b1-44c4-4d5d-858e-155c5a818b04"],
Cell[CellGroupData[{
Cell[83186, 1546, 1627, 39, 132, "Input",ExpressionUUID->"2b75792d-ad89-4b0c-892e-69f2155ff409"],
Cell[84816, 1587, 11298, 227, 173, "Output",ExpressionUUID->"01df8907-2df3-4932-b998-8eeb9442be10"]
}, Open  ]],
Cell[96129, 1817, 185, 3, 25, "Text",ExpressionUUID->"62b4ed07-3b73-45d5-bf7e-ee50fb60995b"],
Cell[96317, 1822, 1021, 31, 83, "Input",ExpressionUUID->"ebe792f9-0e0f-42ef-8fd4-9e9739c32c81"],
Cell[97341, 1855, 185, 3, 25, "Text",ExpressionUUID->"e5fe71d7-bdd2-489a-b3e1-0a06a7c58142"],
Cell[CellGroupData[{
Cell[97551, 1862, 1721, 43, 118, "Input",ExpressionUUID->"95f0b7eb-dc91-4690-bcc1-cb62b3000304"],
Cell[99275, 1907, 14110, 314, 173, "Output",ExpressionUUID->"9b518438-bada-4b0c-979a-2f7756d2aca8"]
}, Open  ]]
}, Open  ]]
}
]
*)

